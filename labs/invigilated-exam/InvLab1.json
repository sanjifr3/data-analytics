{"paragraphs":[{"text":"/*\nLab Test - MIE1512 - February 14\nThis test is due at the end of the lab. You have 3 hours to complete all questions.\n\nYou will be working with three datasets from the National Highway Traffic Safety Administration (NHTSA) describing the fatalities in accidents in 2015:\n    1) Dataset describing the accidents in 2015.\n    2) Dataset describing the vehicles involved in the accidents in 2015.\n    3) Dataset describing the persons involved in the accidents in 2015.\n\n*/","dateUpdated":"2017-02-13T11:06:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486747821160_-1961797322","id":"20170210-173021_1866926929","dateCreated":"2017-02-10T05:30:21+0000","dateStarted":"2017-02-13T11:06:53+0000","dateFinished":"2017-02-13T11:06:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:446","errorMessage":""},{"text":"/*\n\n*****************\nBefore you start:\n    - Download the CSV files \"accident.csv\",\"vehicle.csv\", \"person.csv\" from Portal and upload them to \"MyData\" to the main data directory (/resources/data)\n    - Use the next cell to verify the files have been successfully uploaded\n*****************\n\n*/","dateUpdated":"2017-02-10T05:36:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486748031254_562615188","id":"20170210-173351_444578198","dateCreated":"2017-02-10T05:33:51+0000","dateStarted":"2017-02-10T05:36:53+0000","dateFinished":"2017-02-10T05:36:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:447","errorMessage":""},{"text":"%sh\nls -la /resources/data/accident.csv\nls -la /resources/data/vehicle.csv\nls -la /resources/data/person.csv","dateUpdated":"2017-02-10T05:36:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486748159861_1687018396","id":"20170210-173559_269052489","dateCreated":"2017-02-10T05:35:59+0000","dateStarted":"2017-02-10T05:36:26+0000","dateFinished":"2017-02-10T05:36:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:448","errorMessage":""},{"text":"/*\naccident.csv is a dataset with the details of accidents in 2015.\nThe CSV files include dozens of fields. for the purpose of our analysis we will only use a small portion of them.\n\nFollowing is the structure of our dataframe based on csv.\nThe format is [X] Y: Z where X is the column number in the csv file, Y is the name, Z is a description\n\n    [0]  State: State Number (See: FARS User's Manual, page 26)\n    [1]  StCase: Case Unique Identifier (for the given year). Constructed from STATE + 4-Digit Consecutive Number\n    [11] Day: Day of Crash\n    [12] Month: Month of Crash\n    [13] Year: Year of Crash\n    [15] Hour: Hour of Crash\n    [16] Minute:Minute of Crash\n    [35] LightCondition. Possible values are as follows:\n            1 - Daylight\n            2 - Dark - Not Lightened\n            3 - Dark - Lightened\n            4 - Dawn\n            5 - Dusk\n            6 - Dark – Unknown Lighting\n            7 - Other\n            8 - Not Reported\n            9 - Unknown\n    [38] Weather. Possible values are as follows:\n            0 - No Additional Atmospheric Conditions\n            1 - Clear\n            2 - Rain\n            3 - Sleet, Hail\n            4 - Snow\n            5 - Fog, Smog, Smoke\n            6 - Severe Crosswinds\n            7 - Blowing Sand, Soil, Dirt\n            8 - Other\n            10 - Cloudy\n            11 - Blowing Snow\n            12 - Freezing Rain or Drizzle\n            98 - Not Reported\n            99 - Unknown\n    [50] Fatals: Number of Fatalities that Occurred in the Crash\n    [51] DrunkDrivers: Number of Drunk Drivers Involved in the Fatal Crash\n*/","dateUpdated":"2017-02-10T06:46:02+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486709156957_1306722326","id":"20170210-064556_1702315511","dateCreated":"2017-02-10T06:45:56+0000","dateStarted":"2017-02-10T06:46:02+0000","dateFinished":"2017-02-10T06:46:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:449","errorMessage":""},{"text":"val accidentRDD = sc.textFile(\"/resources/data/accident.csv\").map(line => line.split(\",\", -1).map(_.trim)).filter(line => line(0) != \"STATE\")\n\ncase class Accident(\n    state: Int,\n    stCase: Int,\n    day: Int,\n    month: Int,\n    year: Int,\n    hour: Int,\n    minute: Int,\n    lightCondition: Int,\n    weather: Int,\n    fatals: Int,\n    drunkDrivers: Int\n  )\n\n// patching the String class with new functions that have a defualt value if conversion to another type fails.\nimplicit class StringConversion(val s: String) {\ndef toTypeOrElse[T](convert: String=>T, defaultVal: T) = try {\n    convert(s)\n  } catch {\n    case _: Throwable => defaultVal\n  }\n  \n  def toIntOrElse(defaultVal: Int = 0) = toTypeOrElse[Int](_.toInt, defaultVal)\n  def toDoubleOrElse(defaultVal: Double = 0D) = toTypeOrElse[Double](_.toDouble, defaultVal)\n}\n\n// clean up Accident fields and convert them to proper formats\ndef getAccident(row:Array[String]):Accident = {\n  return Accident(\n    row(0).toInt,\n    row(1).toInt,\n    row(11).toInt,\n    row(12).toInt,\n    row(13).toInt,\n    row(15).toInt,\n    row(16).toInt,\n    row(35).toInt,\n    row(38).toInt,\n    row(50).toInt,\n    row(51).toInt\n  )\n}\n\n// load the data into a DataFrame used for SparkSQL\nval accident = accidentRDD.map(r => getAccident(r)).toDF()\n// register this data as an SQL table\naccident.createOrReplaceTempView(\"accident\")","dateUpdated":"2017-02-13T08:35:15+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486700266444_1258170183","id":"20170210-041746_1669097569","dateCreated":"2017-02-10T04:17:46+0000","dateStarted":"2017-02-13T08:35:15+0000","dateFinished":"2017-02-13T08:35:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:450","errorMessage":""},{"text":"%sql\nSELECT * FROM accident\nLIMIT 10","dateUpdated":"2017-02-10T04:36:50+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486701367072_-355884866","id":"20170210-043607_1194775244","dateCreated":"2017-02-10T04:36:07+0000","dateStarted":"2017-02-10T04:36:50+0000","dateFinished":"2017-02-10T04:36:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:451","errorMessage":""},{"text":"/*\nQuestion 1.1: Calculate the fatalities to accident ratio per month. The results should be ordered by the ratio (higher first)\n*/","dateUpdated":"2017-02-13T09:46:59+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486705232822_-418114618","id":"20170210-054032_386435382","dateCreated":"2017-02-10T05:40:32+0000","dateStarted":"2017-02-13T09:46:59+0000","dateFinished":"2017-02-13T09:47:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:452","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:58:05+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"Month","index":0,"aggr":"sum"}],"values":[{"name":"numAccident","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Month","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486701971139_93588337","id":"20170210-044611_1990503474","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T04:46:11+0000","dateStarted":"2017-02-14T19:58:05+0000","dateFinished":"2017-02-14T19:58:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:453","focus":true},{"text":"/*\n\nQuestion 1.2: pick the highest ratio from Question 1.2, and write a query that returns all the dates (and *only* the dates) in which the daily ratio was higher than the highest monthly ratio.\n\n*/","dateUpdated":"2017-02-13T09:48:30+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486706118258_-583270943","id":"20170210-055518_1465233697","dateCreated":"2017-02-10T05:55:18+0000","dateStarted":"2017-02-13T09:48:30+0000","dateFinished":"2017-02-13T09:48:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:454","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:58:01+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"DAY","index":0,"aggr":"sum"}],"values":[{"name":"MONTH","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"DAY","index":0,"aggr":"sum"},"yAxis":{"name":"MONTH","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486706148222_-605925155","id":"20170210-055548_1483235281","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T05:55:48+0000","dateStarted":"2017-02-14T19:58:01+0000","dateFinished":"2017-02-14T19:58:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:455","focus":true},{"text":"/*\n\nQuestion 1.3: write a query that returns the fatalities to accident ratio, for accidents with no drunk drivers vs. accidents in which at least one driver is drunk\n\n*/","dateUpdated":"2017-02-13T09:50:27+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486706542267_230653582","id":"20170210-060222_2002336568","dateCreated":"2017-02-10T06:02:22+0000","dateStarted":"2017-02-13T09:50:27+0000","dateFinished":"2017-02-13T09:50:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:456","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:54+0000","config":{"colWidth":12,"graph":{"mode":"table","height":114,"optionOpen":false,"keys":[{"name":"isDrunk","index":0,"aggr":"sum"}],"values":[{"name":"numAccidents","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"isDrunk","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486706624947_-852491193","id":"20170210-060344_610017147","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T06:03:44+0000","dateStarted":"2017-02-14T19:57:54+0000","dateFinished":"2017-02-14T19:57:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:457","focus":true},{"text":"/*\nQuestion 1.4: Calculate the percent of accidents (out of all accidents) that occured in the dark per month\n*/","dateUpdated":"2017-02-13T09:50:33+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486705559787_1312377021","id":"20170210-054559_62132093","dateCreated":"2017-02-10T05:45:59+0000","dateStarted":"2017-02-13T09:50:33+0000","dateFinished":"2017-02-13T09:50:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:458","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:50+0000","config":{"colWidth":12,"graph":{"mode":"table","height":232,"optionOpen":false,"keys":[{"name":"month","index":0,"aggr":"sum"}],"values":[{"name":"percentDark","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"month","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486705718218_-393605059","id":"20170210-054838_1943707985","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T05:48:38+0000","dateStarted":"2017-02-14T19:57:50+0000","dateFinished":"2017-02-14T19:57:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:459"},{"text":"/*\nvehicle.csv is a dataset with the details of vehicles that were involved in accidents in 2015.\nThe CSV files include dozens of fields. for the purpose of our analysis we will only use a small portion of them.\n\nFollowing is the structure of our dataframe based on csv.\nThe format is [X] Y: Z where X is the column number in the csv file, Y is the name, Z is a description\n\n    [0]  State: State Number (See: FARS User's Manual, page 26)\n    [1]  StCase: Case Unique Identifier (for the given year). Constructed from STATE + 4-Digit Consecutive Number\n    [2] vehicleNumber: Consecutive number assigned to each vehicle in the case.  \n    [20] VIN: Vehicle identification number (VIN) of this vehicle\n    [4] numOccupants: A count of the number of occupants in this vehicle\n    [15] maker: The make (manufacturer) of this vehicle\n    [16] model: The model of this vehicle within a given maker\n    [19] modelYear: The manufacturer's model year of this vehicle\n    [49] travelSpeed: The speed the vehicle was traveling prior to the occurrence of the crash as reported by the investigating officer.\n            0       - Stopped Motor Vehicle in Transport\n            1-151   - Reported Speed Up to 151 mph\n            997     - Speed Greater than 151 mph\n            998     - Not Reported\n            999     - Unknown\n    [87] speedLimit: The attribute that best represents the speed limit just prior to this vehicle’s critical precrash event:\n            0    -  No Statutory Limit/Non-Trafficway or Driveway Access\n            5-80 -  Speed Limit (5 mph Increments)\n            98   -  Not Reported\n            99   -  Unknown\n    [55] towed: The mode by which this vehicle left the scene of the crash.\n            2 -  Towed Due to Disabling Damage\n            3 -  Towed Not Due to Disabling Damage\n            5 -  Not Towed\n            8 -  Not Reported\n            9 -  Unknown\n*/","dateUpdated":"2017-02-10T07:30:33+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486709177057_1106283474","id":"20170210-064617_1774042567","dateCreated":"2017-02-10T06:46:17+0000","dateStarted":"2017-02-10T07:30:33+0000","dateFinished":"2017-02-10T07:30:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:460","errorMessage":""},{"text":"val vehicleRDD = sc.textFile(\"/resources/data/vehicle.csv\").map(line => line.split(\",\", -1).map(_.trim)).filter(line => line(0) != \"STATE\")\n\ncase class Vehicle(\n    state: Int,\n    stCase: Int,\n    vehicleNumber: Int,\n    VIN: String,\n    numOccupants: Int,\n    maker: Int,\n    model: Int,\n    modelYear: Int,\n    travelSpeed:Int,\n    speedLimit: Int,\n    towed: Int\n  )\n\n// clean up vehicle fields and convert them to proper formats\ndef getVehicle(row:Array[String]):Vehicle = {\n  return Vehicle(\n    row(0).toInt,\n    row(1).toInt,\n    row(2).toInt,\n    row(20),\n    row(4).toInt,\n    row(15).toInt,\n    row(16).toInt,\n    row(19).toInt,\n    row(49).toInt,\n    row(87).toInt,\n    row(55).toInt\n  )\n}\n\n// load the data into a DataFrame used for SparkSQL\nval vehicle = vehicleRDD.map(r => getVehicle(r)).toDF()\n// register this data as an SQL table\nvehicle.createOrReplaceTempView(\"vehicle\")","dateUpdated":"2017-02-13T08:59:16+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486706870563_-397577907","id":"20170210-060750_1245584976","dateCreated":"2017-02-10T06:07:50+0000","dateStarted":"2017-02-13T08:59:16+0000","dateFinished":"2017-02-13T08:59:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:461","errorMessage":""},{"text":"%sql\nSELECT *\nFROM vehicle\nLIMIT 10","dateUpdated":"2017-02-10T06:23:20+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486707771084_987015725","id":"20170210-062251_1179996468","dateCreated":"2017-02-10T06:22:51+0000","dateStarted":"2017-02-10T06:23:20+0000","dateFinished":"2017-02-10T06:23:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:462","errorMessage":""},{"text":"/*\nperson.csv is a dataset with the details of persons that were involved in accidents in 2015.\nThe CSV files include dozens of fields. for the purpose of our analysis we will only use a small portion of them.\n\nFollowing is the structure of our dataframe based on csv.\nThe format is [X] Y: Z where X is the column number in the csv file, Y is the name, Z is a description\n\n    [0]  State: State Number (See: FARS User's Manual, page 26)\n    [1]  StCase: Case Unique Identifier (for the given year). Constructed from STATE + 4-Digit Consecutive Number\n    [3]  vehicleNumber: Consecutive number assigned to each vehicle in the case (starting from 1 for every case). \n    [4]  personNumber: Consecutive number assigned to each person in the vehicle (starting from 1 for every vehicle).\n    [28] personType: The role of this person involved in the crash:\n            1 - Driver of a Motor Vehicle In-Transport\n            2 - Passenger of a Motor Vehicle In-Transport\n            3 - Occupant of a Motor Vehicle Not In-Transport\n            4 - Occupant of a Non-Motor Vehicle Transport Device\n            5 - Pedestrian\n            6 - Bicyclist\n            7 - Other Cyclist\n            8 - Person on Personal Conveyances (Since 2007)\n            9 - Unknown Occupant Type in a Motor Vehicle In-Transport\n            10- Persons In/On Buildings (Since 2007)\n            19- Unknown Type of Non-Motorist\n    [26] age: Age\n            0       - Less than One Year\n            1-120   - Age of the Individual in Years\n            998     - Not Reported\n            999     - Unknown\n    [27] sex: Sex\n    [52] DOA: Describes if this person died at the scene of the crash or en route to a hospital/medical facility\n            0 - Not Applicable\n            7 - Died at Scene\n            8 - Died En Route\n            9 - Unknown\n*/","dateUpdated":"2017-02-10T07:52:57+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486709923712_1214467434","id":"20170210-065843_1043763878","dateCreated":"2017-02-10T06:58:43+0000","dateStarted":"2017-02-10T07:52:57+0000","dateFinished":"2017-02-10T07:52:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:463","errorMessage":""},{"text":"val personRDD = sc.textFile(\"/resources/data/person.csv\").map(line => line.split(\",\", -1).map(_.trim)).filter(line => line(0) != \"STATE\")\n\ncase class Person(\n    state: Int,\n    stCase: Int,\n    vehicleNumber: Int,\n    personNumber: Int,\n    personType: Int,\n    age: Int,\n    sex: Int,\n    DOA: Int\n  )\n\ndef getPerson(row:Array[String]):Person = {\n  return Person(\n    row(0).toInt,\n    row(1).toInt,\n    row(3).toInt,\n    row(4).toInt,\n    row(28).toInt,\n    row(26).toInt,\n    row(27).toInt,\n    row(52).toInt\n  )\n}\n\n\nval person = personRDD.map(r => getPerson(r)).toDF()\nperson.createOrReplaceTempView(\"person\")\n","dateUpdated":"2017-02-13T09:51:06+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486700429666_177996654","id":"20170210-042029_1012075443","dateCreated":"2017-02-10T04:20:29+0000","dateStarted":"2017-02-13T09:51:06+0000","dateFinished":"2017-02-13T09:51:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:464","errorMessage":""},{"text":"%sql\nSELECT *\nFROM person\nLIMIT 10","dateUpdated":"2017-02-10T07:17:35+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486710677862_-601090938","id":"20170210-071117_1598409530","dateCreated":"2017-02-10T07:11:17+0000","dateStarted":"2017-02-10T07:17:35+0000","dateFinished":"2017-02-10T07:17:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:465","errorMessage":""},{"text":"/*\n\nQuestion 2.1: Calculate the percent of vehicles for which the travelSpeed is above the speed limit. Make sure you ignore values that are not valid speed values\n\n*/","dateUpdated":"2017-02-13T09:51:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486710691952_-1480626924","id":"20170210-071131_1316164115","dateCreated":"2017-02-10T07:11:31+0000","dateStarted":"2017-02-13T09:51:26+0000","dateFinished":"2017-02-13T09:51:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:466","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:36+0000","config":{"colWidth":12,"graph":{"mode":"table","height":89,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486711545587_363888831","id":"20170210-072545_1737746292","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T07:25:45+0000","dateStarted":"2017-02-14T19:57:36+0000","dateFinished":"2017-02-14T19:57:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:467","focus":true},{"text":"/*\n\nQuestion 2.2: \n    - Calculate the same ratio (percent of vehicles for which the travelSpeed is above the speed limit) *per maker*. \n    - Make sure you only consider makers that have more than 100 cars involved in accidents.\n    - Make sure you ignore values that are not valid speed values.\n    - Order the results based on the ratio (higher first)\n\n*/","dateUpdated":"2017-02-13T09:53:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486711584531_-27138645","id":"20170210-072624_1225819836","dateCreated":"2017-02-10T07:26:24+0000","dateStarted":"2017-02-13T09:53:00+0000","dateFinished":"2017-02-13T09:53:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:468","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:27+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"maker","index":0,"aggr":"sum"}],"values":[{"name":"countAll","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"maker","index":0,"aggr":"sum"},"yAxis":{"name":"countAll","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486712069673_-103433298","id":"20170210-073429_3760323","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T07:34:29+0000","dateStarted":"2017-02-14T19:57:27+0000","dateFinished":"2017-02-14T19:57:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:469","focus":true},{"text":"/*\n\nQuestion 2.3: List the 5 oldest persons for each personType. Make sure you ignore invalid values. Hint: use window functions\n\n*/","dateUpdated":"2017-02-13T09:53:04+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486712179941_-557251466","id":"20170210-073619_1635810391","dateCreated":"2017-02-10T07:36:19+0000","dateStarted":"2017-02-13T09:53:04+0000","dateFinished":"2017-02-13T09:53:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:470","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:19+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"state","index":0,"aggr":"sum"}],"values":[{"name":"stCase","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"state","index":0,"aggr":"sum"},"yAxis":{"name":"stCase","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486712896983_-1382927539","id":"20170210-074816_1273562029","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T07:48:16+0000","dateStarted":"2017-02-14T19:57:19+0000","dateFinished":"2017-02-14T19:57:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:471","focus":true},{"text":"/*\n\nQuestion 2.4: Calculate the average age of persons involved in accident for each possible value of number of drunkDrivers involved in the accident.\n\n*/","dateUpdated":"2017-02-13T09:53:10+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486712992783_1714270458","id":"20170210-074952_1464565551","dateCreated":"2017-02-10T07:49:52+0000","dateStarted":"2017-02-13T09:53:10+0000","dateFinished":"2017-02-13T09:53:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:472","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:09+0000","config":{"colWidth":12,"graph":{"mode":"table","height":161,"optionOpen":false,"keys":[{"name":"drunkDrivers","index":0,"aggr":"sum"}],"values":[{"name":"avg(age)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"drunkDrivers","index":0,"aggr":"sum"},"yAxis":{"name":"avg(age)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486713424688_-1574273330","id":"20170210-075704_1672968538","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-10T07:57:04+0000","dateStarted":"2017-02-14T19:57:09+0000","dateFinished":"2017-02-14T19:57:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:473","focus":true},{"text":"/*\n\nQuestion 3.1: show the distribution of ages involved in accidents, based on age groups of 10 years (i.e., how many people of age 0-9, 10-19, etc.)\n    - In order to get the age group from an age we can use the integer part of age/10. e.g. Integer(27/10) = 2.\n    - You can use CAST(age/10 as INT) to get the age group\n    - Make sure you ignore invalid values.\n    - Order the results based on the age groups\n\n*/","dateUpdated":"2017-02-13T10:43:04+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487022800419_-1565479527","id":"20170213-215320_763003957","dateCreated":"2017-02-13T09:53:20+0000","dateStarted":"2017-02-13T10:43:04+0000","dateFinished":"2017-02-13T10:43:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:474","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:57:02+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"ageGroup","index":0,"aggr":"sum"}],"values":[{"name":"count(1)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ageGroup","index":0,"aggr":"sum"},"yAxis":{"name":"count(1)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487023884104_-1560712064","id":"20170213-221124_814952114","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-13T10:11:24+0000","dateStarted":"2017-02-14T19:57:02+0000","dateFinished":"2017-02-14T19:57:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:475","focus":true},{"text":"/*\n\nQuestion 3.2: \n    - Examine the distribution of ages involved in accidents, based on age groups of 10 years, *for each one of the following personTypes*:\n        1. Drivers\n        2. Passengers\n        3. Pedestrian\n        4. Bicyclist\n    - Which are the two most different distributions? (provide answer in a new cell as a code comment)\n*/","dateUpdated":"2017-02-13T10:46:16+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487024243521_-187454584","id":"20170213-221723_1915789361","dateCreated":"2017-02-13T10:17:23+0000","dateStarted":"2017-02-13T10:46:16+0000","dateFinished":"2017-02-13T10:46:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:476","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:56:56+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"ageGroup","index":0,"aggr":"sum"}],"values":[{"name":"count(1)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ageGroup","index":0,"aggr":"sum"},"yAxis":{"name":"count(1)","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487024038928_-74413383","id":"20170213-221358_371236949","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-13T10:13:58+0000","dateStarted":"2017-02-14T19:56:56+0000","dateFinished":"2017-02-14T19:56:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:477","focus":true},{"text":"/*\n\nQuestion 3.3: Show the average fatalities in accidents vs. the youngest driver involved in the accident (in age groups of 10 years, as before)\n\n*/","dateUpdated":"2017-02-13T10:49:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487025981413_-945695619","id":"20170213-224621_1416904815","dateCreated":"2017-02-13T10:46:21+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:479","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:56:49+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"ageGroup","index":0,"aggr":"sum"}],"values":[{"name":"ratio","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ageGroup","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487025315341_-593250826","id":"20170213-223515_791545830","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-13T10:35:15+0000","dateStarted":"2017-02-14T19:56:49+0000","dateFinished":"2017-02-14T19:56:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:480","focus":true},{"text":"/*\n\nQuestion 3.4: Show the average fatalities in accidents vs. the oldest car involved in the accident (in age groups of 10 years, as before)\n\n*/","dateUpdated":"2017-02-13T10:51:59+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487026127071_-226216820","id":"20170213-224847_1194990116","dateCreated":"2017-02-13T10:48:47+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:481","errorMessage":""},{"text":"// Your answer","dateUpdated":"2017-02-14T19:54:52+0000","config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"yearGroup","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"yearGroup","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487024249982_1871336781","id":"20170213-221729_1638277558","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-02-13T10:17:29+0000","dateStarted":"2017-02-14T19:54:52+0000","dateFinished":"2017-02-14T19:54:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:482","focus":true},{"text":"/*\n\nQuestion 3.5: What can we learn from the two distributions above (3.3 and 3.4)? Which is more interesting?\n\n*/","dateUpdated":"2017-02-14T19:54:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487026458954_-1235537423","id":"20170213-225418_1623867960","dateCreated":"2017-02-13T10:54:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:483","dateFinished":"2017-02-14T19:54:17+0000","dateStarted":"2017-02-14T19:54:01+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487102040942_575596689","id":"20170214-195400_1874391627","dateCreated":"2017-02-14T19:54:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3431","dateUpdated":"2017-02-14T19:54:56+0000","dateFinished":"2017-02-14T19:54:57+0000","dateStarted":"2017-02-14T19:54:57+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"text":"// Your answer"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1487102096934_1919817401","id":"20170214-195456_1739736880","dateCreated":"2017-02-14T19:54:56+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3514","dateUpdated":"2017-02-14T19:55:09+0000","text":""}],"name":"InvLab1","id":"2CA9N1KBM","angularObjects":{"2C1FSWPV5:shared_process":[],"2C2ANMC3H:shared_process":[],"2C27C2CAW:shared_process":[],"2C1EQ4DYT:shared_process":[],"2C2D85D6Q:shared_process":[],"2BYMYHYE7:shared_process":[],"2BZJ3HWCJ:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}