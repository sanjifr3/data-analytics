{"paragraphs":[{"text":"/*\nLab 02\n\nObjective: Use the Zeppelin platform and visualizations to find interesting things about the dataset.\n\n\"Interestingness of data\"\nData is likely to be interesting if it displays large deviations (or outliers) from some reference (e.g. another dataset, historical data, or the rest of the data.)\n\n\nFor the taxi dataset, an uninteresting deviation would be less ridership between 2 am and 6 am. \n\nAn interesting deviation might be the difference between travel distance and Euclidian  distance, indicating more deviation from the direct route.\n\nYour tasks:\n1) Review the columns (attributes) in the Taxi class and find interesting grouping and combinations of columns and grouping that show deviations between values.\n\n2) Execute the code to get the data ready, up to line marked \"// Queries\"\n\n3) Each set of use-cases is in one of 6 Groups. Read the introduction and execute each query.\n\n4) There are 4 Question sections within the 6 Groups. Answer each question before moving forward.\n   Cells prefilled with \"your SQL code here\" leave space for your answers.\n\n*/","dateUpdated":"2017-01-31T01:15:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_1788490297","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:235","dateFinished":"2017-01-31T01:15:26+0000","dateStarted":"2017-01-31T01:15:11+0000","focus":true},{"text":"import java.sql.Timestamp\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\n\nval taxiText = sc.parallelize(\n    IOUtils.toString(\n        new URL(\"https://drive.google.com/uc?export=download&id=0B1K-gHwDFeUENDJaS3p6bWtWN0E\"),\n        Charset.forName(\"utf8\")).split(\"\\n\"))","dateUpdated":"2017-01-31T01:15:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_865981224","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:15:41+0000","dateFinished":"2017-01-31T01:15:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:236","focus":true,"errorMessage":""},{"text":"taxiText.take(2)","dateUpdated":"2017-01-31T01:15:44+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803793495_483339457","id":"20170130-191633_355408196","dateCreated":"2017-01-30T07:16:33+0000","dateStarted":"2017-01-31T01:15:44+0000","dateFinished":"2017-01-31T01:15:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:237","errorMessage":"","focus":true},{"text":"// Taxi class\ncase class Taxi(                            // column index\n    _id: String,                            // 0\n    _rev: String,                           // 1\n    dropoff_datetime: java.sql.Timestamp,   // 2\n    dropoff_latitude: Double,               // 3\n    dropoff_longitude: Double,              // 4  \n    hack_license: String,                   // 5\n    medallion: String,                      // 6\n    passenger_count: Integer,               // 7\n    pickup_datetime: java.sql.Timestamp,    // 8\n    pickup_latitude: Double,                // 9\n    pickup_longitude: Double,               // 10\n    rate_code: Integer,                     // 11\n    store_and_fwd_flag: String,             // 12\n    trip_distance: Double,                  // 13\n    trip_time_in_secs: Integer,             // 14\n    vendor_id: String                       // 15\n  )\n\n// patching the String class with new functions that have a defualt value if conversion to another type fails.\nimplicit class StringConversion(val s: String) {\ndef toTypeOrElse[T](convert: String=>T, defaultVal: T) = try {\n    if (s matches \"[\\\\+\\\\-0-9.eE]+\") \n        convert(s)\n    else \n        defaultVal\n  } catch {\n    case _: NumberFormatException => defaultVal\n  }\n  \n  def toIntOrElse(defaultVal: Int = 0) = toTypeOrElse[Int](_.toInt, defaultVal)\n  def toDoubleOrElse(defaultVal: Double = 0D) = toTypeOrElse[Double](_.toDouble, defaultVal)\n}\n\n// clean up Taxi fields and convert them to proper formats\ndef getTaxiCleaned(row:Array[String]):Taxi = {\n  return Taxi(\n    row(0).replaceAll(\"\\\"\", \"\"),\n    row(1).replaceAll(\"\\\"\", \"\"),\n    Timestamp.valueOf(row(2).replaceAll(\"\\\"\", \"\")),\n    row(3).toDoubleOrElse(0),\n    row(4).toDoubleOrElse(0),\n    row(5).replaceAll(\"\\\"\", \"\"),\n    row(6).replaceAll(\"\\\"\", \"\"),\n    row(7).toIntOrElse(0),\n    Timestamp.valueOf(row(8).replaceAll(\"\\\"\", \"\")),\n    row(9).toDoubleOrElse(0),\n    row(10).toDoubleOrElse(0),\n    row(11).toIntOrElse(0),\n    row(12).replaceAll(\"\\\"\", \"\"),\n    row(13).toDoubleOrElse(0),\n    row(14).toIntOrElse(0),\n    row(15).replaceAll(\"\\\"\", \"\")\n  )\n}\n\n","dateUpdated":"2017-01-31T01:15:48+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_658295103","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:15:56+0000","dateFinished":"2017-01-31T01:16:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:238","errorMessage":"","focus":true},{"text":"val data = taxiText.map(line => line.split(\",\").map(elem => elem.trim))","dateUpdated":"2017-01-31T01:15:53+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_774912322","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:15:59+0000","dateFinished":"2017-01-31T01:16:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:239","errorMessage":"","focus":true},{"text":"// load the data into a DataFrame used for SparkSQL\nval taxi = data.filter(s => s(0) != \"\\\"_id\\\"\").map(s => getTaxiCleaned(s)).toDF()\n// register this data as an SQL table\ntaxi.registerTempTable(\"taxi\")\n","dateUpdated":"2017-01-31T01:15:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_360766791","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:16:00+0000","dateFinished":"2017-01-31T01:16:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:240","focus":true,"errorMessage":""},{"text":"//====================================\n// Queries\n//====================================","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_1222199372","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:241"},{"text":"//************************************\n// Group 1\n//************************************","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_166528345","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:242"},{"text":"// Execute the following query. \n// Click on the \"settings\" link to expand visualization options. \n// The queries that follow use these options to visualize the query results in interesting ways.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_641259279","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:243"},{"title":"Counts of trip Distances","text":"%sql\nSELECT trip_distance, count(1) value \nfrom taxi \ngroup by trip_distance \norder by trip_distance\n","dateUpdated":"2017-01-31T01:16:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"trip_distance","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"trip_distance","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_893475946","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:16:04+0000","dateFinished":"2017-01-31T01:16:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:244","errorMessage":"","focus":true},{"text":"// Outliers past trip_distance > 10 are the one offs, and are not of interest. Let's reduce the range of rows. ","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682699_1521975953","id":"20160210-170704_928573862","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:245"},{"title":"Counts of Trip Distances: distance < 10","text":"%sql\nSELECT trip_distance, count(1) value \nfrom taxi \nWHERE trip_distance < 10 \ngroup by trip_distance order by trip_distance\n","dateUpdated":"2017-01-31T01:16:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"trip_distance","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"trip_distance","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_1459549657","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:16:18+0000","dateFinished":"2017-01-31T01:16:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:246","errorMessage":"","focus":true},{"text":"// Let's isolate the query using subquery to look at records at the top portion of the y-axis.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_916373670","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:247"},{"title":"Counts Of Trip Distances: Distance < 10 and Count > 200","text":"%sql\nselect Q1.trip_distance, Q1.value from (\n    SELECT trip_distance, count(1) value \n    from taxi \n    WHERE trip_distance < 10\n    group by trip_distance order by trip_distance\n) as Q1\nwhere Q1.value > 200","dateUpdated":"2017-01-31T01:16:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"trip_distance","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"trip_distance","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_151218195","dateCreated":"2017-01-30T07:14:42+0000","dateStarted":"2017-01-31T01:16:22+0000","dateFinished":"2017-01-31T01:16:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:248","errorMessage":"","focus":true},{"text":"//************************************\n// Saving Files to Parquet\n//************************************","dateUpdated":"2017-01-30T07:23:06+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803986952_-1991493519","id":"20170130-191946_1757802844","dateCreated":"2017-01-30T07:19:46+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:249","errorMessage":""},{"text":"// Save the dataframe, and delete the SQL table\ntaxi.write.parquet(\"taxi.parquet\")\nsqlc.dropTempTable(\"taxi\")","dateUpdated":"2017-01-31T01:17:53+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803989373_-1137735709","id":"20170130-191949_801113879","dateCreated":"2017-01-30T07:19:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:250","dateFinished":"2017-01-31T01:17:56+0000","dateStarted":"2017-01-31T01:17:53+0000","errorMessage":"","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485825470769_-988210338","id":"20170131-011750_118733904","dateCreated":"2017-01-31T01:17:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4224","dateUpdated":"2017-01-31T01:19:34+0000","dateFinished":"2017-01-31T01:19:35+0000","dateStarted":"2017-01-31T01:19:34+0000","errorMessage":"","text":"// read the parquet file, and register it as SQL table\nval savedTaxi = sqlc.read.parquet(\"taxi.parquet\")\nsavedTaxi.registerTempTable(\"taxi\")"},{"config":{"colWidth":12,"graph":{"mode":"table","height":89,"optionOpen":false,"keys":[{"name":"count(1)","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"count(1)","index":0,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485825577299_-1243898147","id":"20170131-011937_978950997","dateCreated":"2017-01-31T01:19:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4306","text":"%sql\nSelect count(*) from taxi","dateUpdated":"2017-01-31T01:20:07+0000","dateFinished":"2017-01-31T01:19:56+0000","dateStarted":"2017-01-31T01:19:56+0000","errorMessage":""},{"text":"//************************************\n// Group 2\n//************************************","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_2036770124","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:251"},{"text":"// Another interesting column, passenger counts plotted as a historgram..","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_1477953412","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:252"},{"title":"histogram of Rides (Y) per passenger Count (X)","text":"%sql\nSELECT passenger_count, count(1) value \nfrom taxi \ngroup by  passenger_count\norder by passenger_count\n","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"multiBarChart","height":294,"optionOpen":false,"keys":[{"name":"passenger_count","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"passenger_count","index":0,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_407676880","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:253"},{"text":"// Let's look at groupings within the graph.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_169674554","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:254"},{"text":"//************************************\n// Group 3\n//************************************","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_1176346608","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:255"},{"title":"Histogram of Rides per hour","text":"%sql\nSELECT hour(pickup_datetime) hour, count(1) value\nfrom taxi \ngroup by  hour(pickup_datetime)\norder by  hour(pickup_datetime)","dateUpdated":"2017-01-31T01:23:05+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"keys":[{"name":"hour","index":0,"aggr":"sum","$$hashKey":"object:1368"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"hour","index":0,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_550521680","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:256","dateFinished":"2017-01-31T01:23:06+0000","dateStarted":"2017-01-31T01:23:05+0000","focus":true},{"text":"// Let's split these graphs by the rate that was used (rate_code)","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_1566513853","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:257"},{"title":"Histogram of Passengers by hour and Rate code","text":"%sql\nSELECT hour(pickup_datetime) hour, rate_code, count(1) value\nfrom taxi \ngroup by  hour(pickup_datetime), rate_code\norder by  hour(pickup_datetime),rate_code","dateUpdated":"2017-01-31T01:23:27+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"keys":[{"name":"hour","index":0,"aggr":"sum"}],"values":[{"name":"value","index":2,"aggr":"sum"}],"groups":[{"name":"rate_code","index":1,"aggr":"sum"}],"scatter":{"yAxis":{"name":"rate_code","index":1,"aggr":"sum"},"xAxis":{"name":"hour","index":0,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_1058665211","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:258","dateFinished":"2017-01-31T01:23:28+0000","dateStarted":"2017-01-31T01:23:27+0000","focus":true},{"text":"// We see that most rates are at rate_code = 1.\n// Let's remove this rate_code and see when other rates are used.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_366024951","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:259"},{"text":"%sql\nSELECT hour(pickup_datetime) hour, rate_code, count(1) value\nfrom taxi \nwhere rate_code != 1\ngroup by  hour(pickup_datetime), rate_code\norder by  hour(pickup_datetime),rate_code","dateUpdated":"2017-01-31T01:24:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"keys":[{"name":"hour","index":0,"aggr":"sum"}],"values":[{"name":"value","index":2,"aggr":"sum"}],"groups":[{"name":"rate_code","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"hour","index":0,"aggr":"sum"},"yAxis":{"name":"rate_code","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_939084758","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:260","dateFinished":"2017-01-31T01:24:04+0000","dateStarted":"2017-01-31T01:24:04+0000","focus":true},{"text":"// Question 1: Is there a correlation between rate_code and distance, or time of pickup, etc?","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682700_1520052208","id":"20160210-170704_307639654","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:261"},{"text":"// your SQL code goes here","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_1655215101","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:262"},{"title":"Histogram Of Passengers Per Minute","text":"%sql\nSELECT concat(hour(pickup_datetime),\":\",minute(pickup_datetime)) minute, round(avg(passenger_count),2) Passengers, count(1) value \nfrom taxi \ngroup by    concat(hour(pickup_datetime),\":\",minute(pickup_datetime))\norder by   concat(hour(pickup_datetime),\":\",minute(pickup_datetime))\n","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_2141399551","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:263"},{"text":"// Let's look at the mapping of two columns, pick hour and trip_distance. What correlation do you see? Can come to any interesting conclusions? \n// Try changing the (Y) column and see if any outliers exist at different hours of the day.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_49904166","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:264"},{"title":"pickup hour (X) vs average distance (Y)","text":"%sql\nSELECT hour(pickup_datetime) pickup_datetime, round(avg(trip_distance),2) avgDist, count(1) value \nfrom taxi \ngroup by  hour(pickup_datetime)\norder by hour(pickup_datetime)\n","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"pickup_datetime","index":0,"aggr":"sum"}],"values":[{"name":"avgDist","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"pickup_datetime","index":0,"aggr":"sum"},"yAxis":{"name":"avgDist","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_564630042","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:265"},{"text":"//************************************\n// Group 4\n//************************************","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_129424040","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:266"},{"text":"// You can represent correlation between three columns by plotting two on the X and Y axes, and adding a coloured grouping for the third.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_1631381360","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:267"},{"title":"Plot of time travelled (X) Vs Distance (Y) Vs Travel Time","text":"%sql\nSELECT hour(pickup_datetime) hour, round(avg(trip_time_in_secs/60),1) avg_trip_mins, round((trip_distance),0) trip_distance, count(1) value \nfrom taxi \ngroup by  hour(pickup_datetime), round(trip_distance,0)\norder by hour(pickup_datetime), round(trip_distance,0)\n","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"keys":[{"name":"hour","index":0,"aggr":"sum"}],"values":[{"name":"trip_distance","index":2,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"hour","index":0,"aggr":"sum"},"group":{"name":"avg_trip_mins","index":1,"aggr":"sum"},"yAxis":{"name":"trip_distance","index":2,"aggr":"sum"}},"forceY":false,"lineWithFocus":false},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_677218619","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:268"},{"text":"// Question 2: Create a query to find a correlation between distance travelled and the eucliedan distance of a trip. \n\n// We saw from queries above that higher rates are applied for night fares.\n// See if there are any differnatiating columns like time where taxis take longer trips for shorter distances.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_897055080","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:269"},{"title":"differnce between travel distance and eucledian distance","text":"// your SQL code goes here","dateUpdated":"2017-01-31T01:24:45+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_77924084","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:270"},{"text":"//******************************\n// Group 5\n//******************************\n// Extended DataFrame functions","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_35944055","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:271"},{"text":"// Identify frequent items in your dataset using the freqItems(Array(<columns>), minimum_value)","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_1190409049","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:272"},{"text":"val freqItems = taxi.stat.freqItems(Array(\"trip_time_in_secs\", \"trip_distance\"), 0.5)\nfreqItems.show()\n//data.stats.cov(\"trip_time_in_secs\", \"travel_time\")","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_1287794262","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:273"},{"text":"// Identify correlations between items where higher numbers mean higher correlation.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682701_1519667459","id":"20160210-170704_1627132828","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:274"},{"text":"val corr = taxi.stat.corr(\"trip_time_in_secs\", \"trip_distance\")\ncorr\n","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1095390778","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:275"},{"text":"// Identify covariance between items where higher numbers mean higher covarience.","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_641981361","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:276"},{"text":"val cov = taxi.stat.cov(\"trip_time_in_secs\", \"trip_distance\")\ncov","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_2075058609","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:277"},{"text":"// Question 3: Identify correlations and covvarience between differentiating columns identofied in previous questions.\n// Can you explain these relations or the lack of?","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_2077126059","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:278"},{"text":"// your SQL code here","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1755713390","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:279"},{"text":"//*******************************************\n// Group 6\n//*******************************************\n// Window Functions","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1350619032","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:280"},{"text":"// In this exmaple, we group results by rate_code, then rank each group by trip_distance.\n// In \"Window Functions\" terminology, we partition all rows by rate_code.\n// We then order them by a new \"rank\" column, putting lowest rank value (highest rank) at the top.\n// We then keep only the highest ranks ( <= 2)","dateUpdated":"2017-01-31T01:31:41+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1554980688","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:281","dateFinished":"2017-01-31T01:31:41+0000","dateStarted":"2017-01-31T01:31:41+0000","focus":true},{"text":"%sql\nSELECT\n    passenger_count,\n    rate_code,\n    trip_distance\nFROM (\n  SELECT\n    passenger_count,\n    rate_code,\n    trip_distance,\n    dense_rank() OVER (PARTITION BY rate_code ORDER BY trip_distance DESC) as rank\n  FROM taxi) tmp\nWHERE\n  rank <= 2","dateUpdated":"2017-01-31T01:39:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1417970267","dateCreated":"2017-01-30T07:14:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:282","dateFinished":"2017-01-31T01:39:11+0000","dateStarted":"2017-01-31T01:39:10+0000","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485827061415_1083545352","id":"20170131-014421_1172017490","dateCreated":"2017-01-31T01:44:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4809","text":"/*\nIn the next example we want to test whether there is correlation between the trip length and the number of passenger for each rate code:\n- First, we divide the trips to 4 quantiles based on the trip length (0-25% qunatile, 25-50% quantile, ...).\n- For each rate_code, for each qunatile, we want to find our the average number of passenger\n*/","dateUpdated":"2017-01-31T01:47:35+0000","dateFinished":"2017-01-31T01:47:36+0000","dateStarted":"2017-01-31T01:47:36+0000","errorMessage":""},{"config":{"colWidth":12,"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"keys":[{"name":"rate_code","index":0,"aggr":"sum"}],"values":[{"name":"avg(passenger_count)","index":2,"aggr":"sum"}],"groups":[{"name":"quartile","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"rate_code","index":0,"aggr":"sum"},"yAxis":{"name":"quartile","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485826145561_1312573284","id":"20170131-012905_1573020112","dateCreated":"2017-01-31T01:29:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4589","text":"%sql\nSELECT\n    rate_code,\n    quartile,\n    AVG(passenger_count)\nFROM (\n  SELECT\n    passenger_count,\n    rate_code,\n    trip_distance,\n    ntile(4) OVER (PARTITION BY rate_code ORDER BY trip_distance ASC) as quartile\n  FROM taxi) tmp\nGROUP BY quartile, rate_code","dateUpdated":"2017-01-31T01:48:57+0000","dateFinished":"2017-01-31T01:47:39+0000","dateStarted":"2017-01-31T01:47:38+0000","errorMessage":""},{"text":"// Question 4: Use other colums and other Window functions, to identify interesting subgroups of record.\n// See this url for Scala syntax:\n//    https://jaceklaskowski.gitbooks.io/mastering-apache-spark/content/spark-sql-windows.html","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_201407194","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"text":"// your SQL code goes here","dateUpdated":"2017-01-30T07:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485803682702_1520821706","id":"20160210-170704_1512822989","dateCreated":"2017-01-30T07:14:42+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:284"}],"name":"Lab 02","id":"2C9PNVBFT","angularObjects":{"2C1FSWPV5:shared_process":[],"2C2ANMC3H:shared_process":[],"2C27C2CAW:shared_process":[],"2C1EQ4DYT:shared_process":[],"2C2D85D6Q:shared_process":[],"2BYMYHYE7:shared_process":[],"2BZJ3HWCJ:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}