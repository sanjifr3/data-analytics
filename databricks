# ls

    $ display(dbutils.fs.ls("/FileStore/")

# Import CSV file

    $ val daoPath = "https://drive.google.com/uc?export=download&id=0By9-Ec6BbYbyQWtiaFRrbm93bEE"
    $ val daoCSV = sc.parallelize(IOUtils.toString(new URL(daoPath),Charset.forName("utf8")).split("\n"))
    $ val daoRDD = daoCSV.map(line => line.split(",").map(elem => elem.trim))

# Simple method through Python

    $ %python
      import pandas as pd

      df = pd.read_csv("https://drive.google.com/uc?export=download&id=0By9-Ec6BbYbyQWtiaFRrbm93bEE")

      tempDF = sqlContext.createDataFrame(df)
      tempDF.createOrReplaceTempView("df")
      tempDF.describe()

  case class DAO(
      address: String,
      balance: Double,
      extraBalance: Double,
      extraBalanceAccount: String
      )
  def getDAOCleaned(row:Array[String]):DAO = {
    return DAO(
      row(0),
      row(1).toDoubleOrElse(),
      row(2).toDoubleOrElse(),
      row(3)
    )
  }

  val daoDF = daoRDD.filter(s => s(0) != "address").map(s => getDAOCleaned(s)).toDF()
  daoDF.createOrReplaceTempView("DAO")
  daoDF.describe()
  daoDF.write.mode("overwrite").parquet("/FileStore/testParquet")

  val daoDF2 = sqlContext.read.parquet("/FileStore/testParquet")

# Python

%python
sc.parallelize(range(0, 100)).saveAsTextFile("/FileStore/test/foo.txt")

# Make directories
dbutils.fs.mkdirs("/foobar/")
dbutils.fs.mkdirs("file:/home/ubuntu/foobar/")
# put
dbutils.fs.put("/foobar/baz.txt", "Hello, World!")


# Basg

  %sh
  cd ../../dbfs/FileStore/
  zip -r tParquet.zip testParquet/


